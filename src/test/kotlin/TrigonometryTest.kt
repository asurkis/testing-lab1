import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.params.ParameterizedTest
import org.junit.jupiter.params.provider.CsvSource
import org.junit.jupiter.params.provider.ValueSource
import kotlin.math.PI
import kotlin.math.abs

class TrigonometryTest {
    @ParameterizedTest
    @CsvSource(
        value = [
            "0, 0, 0.02",
            "0.017453292519943, 0.017455064928218, 0.02",
            "-0.017453292519943, -0.017455064928218, 0.02",
            "0.523598775598299, 0.577350269189626, 0.02",
            "0.541052068118242, 0.60086061902756, 0.02",
            "0.506145483078356, 0.554309051452769, 0.02",
            "0.785398163397448, 1, 0.02",
            "0.802851455917391, 1.03553031379057, 0.02",
            "0.767944870877505, 0.965688774807074, 0.02",
            "1.0471975511966, 1.73205080756888, 0.02",
            "1.06465084371654, 1.80404775527142, 0.02",
            "1.02974425867665, 1.66427948235052, 0.02",
            "1.5707963267949, 1.63312393531954E+016, 0.02",
            "1.58824961931484, -57.2899616307596, 0.02",
            "1.55334303427495, 57.2899616307591, 0.02",
            "2.0943951023932, -1.73205080756888, 0.02",
            "2.11184839491314, -1.66427948235052, 0.02",
            "2.07694180987325, -1.80404775527142, 0.02",
            "2.35619449019234, -1, 0.02",
            "2.37364778271229, -0.965688774807075, 0.02",
            "2.3387411976724, -1.03553031379057, 0.02",
            "2.61799387799149, -0.577350269189626, 0.02",
            "2.63544717051144, -0.554309051452769, 0.02",
            "2.60054058547155, -0.600860619027561, 0.02",
            "3.14159265358979, -1.22464679914735E-16, 0.02",
            "3.15904594610974, 0.017455064928217, 0.02",
            "3.12413936106985, -0.017455064928218, 0.02",
            "-0.523598775598299, -0.577350269189626, 0.02",
            "-0.541052068118242, -0.60086061902756, 0.02",
            "-0.506145483078356, -0.554309051452769, 0.02",
            "-0.785398163397448, -1, 0.02",
            "-0.802851455917391, -1.03553031379057, 0.02",
            "-0.767944870877505, -0.965688774807074, 0.02",
            "-1.0471975511966, -1.73205080756888, 0.02",
            "-1.06465084371654, -1.80404775527142, 0.02",
            "-1.02974425867665, -1.66427948235052, 0.02",
            "-1.5707963267949, -1.63312393531954E+016, 0.02",
            "-1.58824961931484, 57.2899616307596, 0.02",
            "-1.55334303427495, -57.2899616307591, 0.02",
            "-2.0943951023932, 1.73205080756888, 0.02",
            "-2.11184839491314, 1.66427948235052, 0.02",
            "-2.07694180987325, 1.80404775527142, 0.02",
            "-2.35619449019234, 1, 0.02",
            "-2.37364778271229, 0.965688774807075, 0.02",
            "-2.3387411976724, 1.03553031379057, 0.02",
            "-2.61799387799149, 0.577350269189626, 0.02",
            "-2.63544717051144, 0.554309051452769, 0.02",
            "-2.60054058547155, 0.600860619027561, 0.02",
            "-3.14159265358979, 1.22464679914735E-16, 0.02",
            "-3.15904594610974, -0.017455064928217, 0.02",
            "-3.12413936106985, 0.017455064928218, 0.02",
            "6.80678408277788, 0.577350269189625, 0.02",
            "6.82423737529783, 0.600860619027559, 0.02",
            "6.78933079025794, 0.554309051452768, 0.02",
            "7.06858347057703, 1, 0.02",
            "7.08603676309698, 1.03553031379057, 0.02",
            "7.05113017805709, 0.965688774807074, 0.02",
            "7.33038285837618, 1.73205080756888, 0.02",
            "7.34783615089613, 1.80404775527142, 0.02",
            "7.31292956585624, 1.66427948235052, 0.02",
            "7.85398163397448, 3266247870639074, 0.02",
            "7.87143492649443, -57.2899616307611, 0.02",
            "7.83652834145454, 57.2899616307591, 0.02",
            "8.37758040957278, -1.73205080756888, 0.02",
            "8.39503370209273, -1.66427948235052, 0.02",
            "8.36012711705284, -1.80404775527143, 0.02",
            "8.63937979737193, -1, 0.02",
            "8.65683308989187, -0.965688774807075, 0.02",
            "8.62192650485199, -1.03553031379057, 0.02",
            "8.90117918517108, -0.577350269189625, 0.02",
            "8.91863247769103, -0.554309051452768, 0.02",
            "8.88372589265114, -0.600860619027561, 0.02",
            "9.42477796076938, -3.67394039744206E-16, 0.02",
            "9.44223125328932, 0.017455064928218, 0.02",
            "9.40732466824944, -0.017455064928219, 0.02",
            "5.75958653158129, -0.577350269189626, 0.02",
            "5.74213323906134, -0.600860619027561, 0.02",
            "5.77703982410123, -0.55430905145277, 0.02",
            "5.49778714378214, -1, 0.02",
            "5.4803338512622, -1.03553031379057, 0.02",
            "5.51524043630208, -0.965688774807075, 0.02",
            "5.23598775598299, -1.73205080756888, 0.02",
            "5.21853446346305, -1.80404775527142, 0.02",
            "5.25344104850293, -1.66427948235052, 0.02",
            "4.71238898038469, 5443746451065123, 0.02",
            "4.69493568786475, 57.2899616307595, 0.02",
            "4.72984227290463, -57.2899616307607, 0.02",
            "4.18879020478639, 1.73205080756888, 0.02",
            "4.17133691226645, 1.66427948235052, 0.02",
            "4.20624349730633, 1.80404775527142, 0.02",
            "3.92699081698724, 1, 0.02",
            "3.9095375244673, 0.965688774807074, 0.02",
            "3.94444410950718, 1.03553031379057, 0.02",
            "3.66519142918809, 0.577350269189626, 0.02",
            "3.64773813666815, 0.554309051452769, 0.02",
            "3.68264472170804, 0.60086061902756, 0.02",
            "3.14159265358979, -1.22464679914735E-16, 0.02",
            "3.12413936106985, -0.017455064928218, 0.02",
            "3.15904594610974, 0.017455064928217, 0.02",
            "-359.476401224402, -359.42264973081, 0.02",
            "-359.458947931882, -359.399139380972, 0.02",
            "-359.493854516922, -359.445690948547, 0.02",
            "-359.214601836603, -359, 0.02",
            "-359.197148544083, -358.964469686209, 0.02",
            "-359.232055129122, -359.034311225193, 0.02",
            "-358.952802448803, -358.267949192431, 0.02",
            "-358.935349156283, -358.195952244729, 0.02",
            "-358.970255741323, -358.335720517649, 0.02",
            "-358.429203673205, 1.6331239353195E+016, 0.02",
            "-358.411750380685, -417.28996163076, 0.02",
            "-358.446656965725, -302.710038369241, 0.02",
            "-357.905604897607, -361.732050807569, 0.02",
            "-357.888151605087, -361.664279482351, 0.02",
            "-357.923058190127, -361.804047755271, 0.02",
            "-357.643805509808, -361, 0.02",
            "-357.626352217288, -360.965688774807, 0.02",
            "-357.661258802328, -361.035530313791, 0.02",
            "-357.382006122009, -360.57735026919, 0.02",
            "-357.364552829489, -360.554309051453, 0.02",
            "-357.399459414528, -360.600860619028, 0.02",
            "-356.85840734641, -360, 0.02",
            "-356.84095405389, -359.982544935072, 0.02",
            "-356.87586063893, -360.017455064928, 0.02",
            "-360.523598775598, -360.57735026919, 0.02",
            "-360.541052068118, -360.600860619028, 0.02",
            "-360.506145483078, -360.554309051453, 0.02",
            "-360.785398163397, -361, 0.02",
            "-360.802851455917, -361.035530313791, 0.02",
            "-360.767944870877, -360.965688774807, 0.02",
            "-361.047197551197, -361.732050807569, 0.02",
            "-361.064650843717, -361.804047755271, 0.02",
            "-361.029744258677, -361.664279482351, 0.02",
            "-361.570796326795, -1.63312393531957E+016, 0.02",
            "-361.588249619315, -302.71003836924, 0.02",
            "-361.553343034275, -417.289961630759, 0.02",
            "-362.094395102393, -358.267949192431, 0.02",
            "-362.111848394913, -358.335720517649, 0.02",
            "-362.076941809873, -358.195952244729, 0.02",
            "-362.356194490192, -359, 0.02",
            "-362.373647782712, -359.034311225193, 0.02",
            "-362.338741197672, -358.964469686209, 0.02",
            "-362.617993877991, -359.42264973081, 0.02",
            "-362.635447170511, -359.445690948547, 0.02",
            "-362.600540585472, -359.399139380972, 0.02",
            "-363.14159265359, -360, 0.02",
            "-363.15904594611, -360.017455064928, 0.02",
            "-363.12413936107, -359.982544935072, 0.02",
        ]
    )
    fun testTg(x: Double, y: Double, epsilon: Double) {
        Assertions.assertTrue(abs(tg(x) - y) < epsilon)
    }

    @ParameterizedTest
    @ValueSource(ints = [0, 1, -1])
    fun testTgHalfPi(k: Int) {
        // 10 ** 9 -- очень большое число
        Assertions.assertTrue(abs(tg((0.5 + k) * PI)) > 1e9)
    }

    @Test
    fun testPositiveInfinity() {
        Assertions.assertEquals(Double.NaN, tg(Double.POSITIVE_INFINITY))
    }

    @Test
    fun testNegativeInfinity() {
        Assertions.assertEquals(Double.NaN, tg(Double.NEGATIVE_INFINITY))
    }
}
